buildscript {
    ext {
        springBootVersion = '1.3.3.RELEASE'
        reactorVersion = '2.0.7.RELEASE'
    }
    repositories {
        // NOTE: You should declare only repositories that you need here
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.spring.io/release" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

jar {
    baseName = 'spring-boot-reactor-example'
    version = '1.2.0'
}

repositories {
    // NOTE: You should declare only repositories that you need here
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/release" }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile 'io.projectreactor.spring:reactor-spring-core:2.0.7.RELEASE'
    compile 'io.projectreactor.spring:reactor-spring-context:2.0.7.RELEASE'
    compile 'io.projectreactor.spring:reactor-spring-messaging:2.0.7.RELEASE'
    compile 'io.projectreactor:reactor-bus:2.0.7.RELEASE'

    compile("org.springframework.boot:spring-boot-starter-thymeleaf")
    compile("org.springframework.boot:spring-boot-starter-websocket")
    compile("org.springframework:spring-messaging")
    compile("org.apache.commons:commons-lang3:3.0")
    compile("com.h2database:h2")
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('org.easytesting:fest-assert:1.4')
}

task "forceTest" {
    dependsOn "cleanTest", "test"
}

task "fullBuild" {
    dependsOn "cleanTest", "test", "check", "build"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}
